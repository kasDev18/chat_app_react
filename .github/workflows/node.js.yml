name: Chat App Deploy on EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: |
            server/package-lock.json
            client/package-lock.json

      # ------------------------------
      # REDIS SETUP
      # ------------------------------
      - name: Install Redis
        run: |
          sudo apt-get update
          sudo apt-get install -y redis-server

      - name: Configure Redis
        run: |
          sudo sed -i 's/^bind .*/bind 0.0.0.0/' /etc/redis/redis.conf
          sudo sed -i 's/# requirepass foobared/requirepass ${{ secrets.REDIS_PASSWORD }}/' /etc/redis/redis.conf
          sudo systemctl enable redis-server
          sudo systemctl restart redis-server

      - name: Test Redis connection
        run: |
          redis-cli -a ${{ secrets.REDIS_PASSWORD }} ping

      - name: Run Redis health check
        working-directory: ./server
        run: node scripts/redis-health-check.js

      # ------------------------------
      # BACKEND SETUP
      # ------------------------------
      - name: Install backend dependencies
        working-directory: ./server
        run: npm install

      - name: Create backend .env file
        working-directory: ./server
        run: |
          touch .env
          echo "${{ secrets.PROD_BACKEND_ENV }}" > .env

      - name: Start backend with PM2
        working-directory: ./server
        run: |
          pm2 restart chat-app-be || pm2 start server.js --name chat-app-be

      # ------------------------------
      # FRONTEND SETUP
      # ------------------------------
      - name: Clean npm cache & remove existing dependencies
        working-directory: ./client
        run: |
          rm -rf node_modules package-lock.json
          npm cache clean --force

      - name: Install frontend dependencies
        working-directory: ./client
        run: npm install

      - name: Create frontend .env file
        working-directory: ./client
        run: |
          touch .env
          echo "${{ secrets.PROD_FRONTEND_ENV }}" > .env

      - name: Build frontend
        working-directory: ./client
        run: npm run build

      - name: Deploy frontend to Nginx
        run: |
          sudo rm -rf /var/www/html/*
          sudo cp -r ./client/dist/* /var/www/html/

      # ------------------------------
      # HEALTH CHECK
      # ------------------------------
      - name: Health check
        run: |
          sleep 10
          curl -f http://54.66.124.33:5001/api/users || exit 1
